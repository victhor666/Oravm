#!/bin/sh

#script de arranque en maquinas de azure con instalacion completa de oracle
#variables
##################################################################################################

RUTA="https://almacenbinariosoracle.blob.core.windows.net/binariosorcl/"
FICH1="LINUX.X64_193000_db_home.zip"
FICH2="LINUX.X64_193000_grid_home.zip"
FICH3="Opatch_12.2.0.1.21_Linux-x86-64.zip"
FICH4="p31750108_190000_Linux-x86-64.zip"
CONFIG1="auto_install_oracle_grid_19c.rsp"
CONFIG2="auto_install_oracle_database_19c.rsp"
LOG="/tmp/script.log"
##################################################################################################

sudo echo "Arrancamos el script de instalacion" > $LOG
# Usamos el waagent para poner la swap. Lo idear es no usar esto por portabilidad a otros clouders...pero es tan comodo (ojo, la maquina tiene que tener al menos 15GB de espacio temporal)
echo "agregando swap" >> $LOG
sudo echo "esperando a que tengamos fichero del agente" >> $LOG
until [ -f /etc/waagent.conf ]
do
     sleep 10
done
sudo service waagent stop >> $LOG
sudo sed -i 's/ResourceDisk.Format=n/ResourceDisk.Format=y/g' /etc/waagent.conf
sudo sed -i 's/ResourceDisk.EnableSwap=n/ResourceDisk.EnableSwap=y/g' /etc/waagent.conf
sudo sed -i 's/ResourceDisk.SwapSizeMB=0/ResourceDisk.SwapSizeMB=15000/g' /etc/waagent.conf
sudo cat /etc/waagent.conf |grep Swap >> $LOG
sudo service waagent start >> $LOG
#Particionando los discos
sudo echo "Esperamos a que se monte el disco"
until [ -b /dev/sdc ]
do
     sleep 5
done

echo "formateamos disco2 para software de oracle en xfs" >> $LOG
sudo parted /dev/sdc --script mklabel gpt mkpart xfspart xfs 0% 100%  >> $LOG
sudo mkfs.xfs /dev/sdc1
sudo partprobe /dev/sdc1 
sudo mkdir -p /oracle
sudo mount /dev/sdc1 /oracle
sudo echo UUID=\"`(blkid /dev/sdc1 -s UUID -o value)`\" /oracle        xfs     defaults,nofail         1       2 >> /etc/fstab

#tareas administrativas
echo "----------------Creación de directorios oracle----------------">> $LOG
sudo mkdir -p /oracle/GRIDINF/19C/soft
sudo mkdir -p /oracle/database/19C/soft


# instalacion de paquetes
# echo "instalamos paquetes" >> $LOG
sudo yum install oracle-database-preinstall-19c-1.0-3.el7.x86_64 -y >> $LOG
sudo chown -R oracle:oinstall /oracle
sudo yum install oracleasm -y >> $LOG
sudo yum install oracleasm-support.x86_64 -y >> $LOG
sudo yum install kmod-oracleasm -y >> $LOG
# sudo yum install oracleasmlib -y >> $LOG

#configuraciones asm
echo "----------------Configuracion asm----------------">> $LOG
sudo oracleasm configure >> $LOG
sudo oracleasm init >> $LOG

#agregamos grupos
sudo echo "Agregamos grupos" >> $LOG
sudo groupadd -g 54327 asmdba
sudo groupadd -g 54328 asmoper
sudo groupadd -g 54329 asmadmin


#este disco hay que formatearlo aqui para que todo lo del asm este instalado
echo "formateamos disco3 en asm" >> $LOG

echo "----------------Creacion de disco en asm----------------">> $LOG
sudo parted /dev/sdd --script mklabel gpt mkpart xfspart xfs 0% 100% 
sudo oracleasm createdisk DATA /dev/sdd1 >> $LOG
sudo oracleasm scandisks >> $LOG
sudo oracleasm listdisks >> $LOG


# Descarga de software
echo "----------------Descarga de ficheros del repositorio----------------">> $LOG
sudo wget $RUTA$FICH1 -O /tmp/$FICH1 
sudo wget $RUTA$FICH2 -O /tmp/$FICH2 
sudo wget $RUTA$FICH3 -O /tmp/$FICH3 
sudo wget $RUTA$FICH4 -O /tmp/$FICH4 
sudo wget $RUTA$CONFIG1 -O /tmp/$CONFIG1
sudo wget $RUTA$CONFIG2 -O /tmp/$CONFIG2
echo "----------------FIN Descarga de ficheros del repositorio----------------">> $LOG

# Descomprimimos el grid y los fuentes de oracle
sudo unzip /tmp/$FICH1 -d /oracle/database/19C/soft
sudo unzip /tmp/$FICH2 -d /oracle/GRIDINF/19C/soft
sudo chown -R oracle:oinstall /oracle
# NOTA---tema importante, poner una maquina con al menos 8GB de memoria

# prerequisitos
echo "----------------Prerequisitos del grid de oracle----------------">> $LOG
sudo su - oracle -c "/oracle/GRIDINF/19C/soft/runcluvfy.sh stage -pre hacfg" >> $LOG

#quitamos firewalld
sudo systemctl stop firewalld.service
sudo systemctl disable firewalld.service

#cambio de permisos del dev de disco para que el usuario de oracle tenga acceso 
sudo chown oracle:asmadmin /dev/oracleasm/disks/DATA
sudo chmod 660 /dev/oracleasm/disks/DATA

#añadir grupos a oracle
echo "----------------Incorporamos los grupos al usuario de oracle----------------">> $LOG
usermod -g oinstall -G dba,oper,backupdba,dgdba,kmdba,asmdba,asmoper,asmadmin,racdba oracle

# poner contraseña en auto_install_oracle_grid_19c.rsp para dos variables (nos aseguramos de una mayuscula, minuscula numero y caracter)
PASS=aB`echo $RANDOM | md5sum | head -c 6`3.
sudo sed -i "s/oracle.install.asm.SYSASMPassword=/oracle.install.asm.SYSASMPassword=$PASS/g" /tmp/$CONFIG1
sudo sed -i "s/oracle.install.asm.monitorPassword=/oracle.install.asm.monitorPassword=$PASS/g" /tmp/$CONFIG1

#creamos otro par de directorios
echo "----------------Creacion de directorios y cambio de permisos----------------">> $LOG
sudo mkdir /oracle_base
sudo chown oracle:oinstall /oracle_base
sudo chmod 755 /oracle_base
sudo mkdir /oraInventory/
sudo chown oracle:oinstall /oraInventory/
sudo chmod 755 /oraInventory/

echo "----------------verificacion de que se cumplen los requisitos----------------">> $LOG
sudo su - oracle -c "/oracle/GRIDINF/19C/soft/runcluvfy.sh stage -pre hacfg" >> $LOG

#ejecutamos la instalacion de grid
sudo echo "----------------Instalacion de grid----------------">> $LOG
sudo su - oracle -c "/oracle/GRIDINF/19C/soft/gridSetup.sh -silent -responseFile /tmp/$CONFIG1" >> $LOG

#Instalacion de oracle
sudo echo "----------------Ejecucion de scripts de root----------------">> $LOG
sudo /oraInventory/orainstRoot.sh
sudo /oracle/GRIDINF/19C/soft/root.sh >> $LOG 
sudo echo "----------------Ejecutando configtools en el grinch----------------">> $LOG
sudo su - oracle -c "/oracle/GRIDINF/19C/soft/gridSetup.sh -executeConfigTools -responseFile /tmp/$CONFIG1 -silent"
sudo echo "----------------validacion de arranque----------------">> $LOG
sudo /oracle/GRIDINF/19C/soft/bin/crsctl stat res -t >> $LOG
sudo echo "----------------Prerequisitos instalacion oracle----------------">> $LOG
sudo su - oracle -c "/oracle/database/19C/soft/runInstaller -executePrereqs -silent -responseFile /tmp/$CONFIG2" >> $LOG
sudo su - oracle -c "/oracle/database/19C/soft/runInstaller -silent -responseFile /tmp/$CONFIG2"  >> $LOG
sudo /oracle/database/19C/soft/root.sh >> $LOG

##actualiacion version de opatch
sudo echo "----------------actualizacion de opach ----------------">> $LOG
sudo mv /oracle/GRIDINF/19C/soft/OPatch/ /oracle/GRIDINF/19C/soft/OPatch.old
sudo chown -R oracle:oinstall /oracle/GRIDINF/19C/soft/OPatch/
sudo unzip /tmp/$FICH3 -d /oracle/GRIDINF/19C/soft/

#descomprimimos el parche
sudo unzip /tmp/$FICH4 -d /tmp/
sudo echo "-------------------parche descomprimido en tmp-------------------" >> $LOG
sudo chown -R oracle:oinstall /tmp/31750108/
sudo /oracle/GRIDINF/19C/soft/OPatch/opatchauto apply /tmp/31750108 >> $LOG
sudo /oracle/GRIDINF/19C/soft/OPatch/opatchauto apply /tmp/31750108 -oh /oracle/database/19C/soft >> $LOG
#### 32649737;SELECT * FROM DBA_DIRECTORIES IN PDB RETURNS ORA-12801,ORA-48189
#### 31335037;RDBMS - DSTV35 UPDATE - TZDATA2020A
sudo echo "----------------Fin de la instalacion----------------">> $LOG
